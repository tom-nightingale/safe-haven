import React from "react";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "@/styles/globals.css";
import { ViewTransitions } from "next-view-transitions";
import createApolloClient from "@/gql/apolloClient";
import {
  GetNavigationByIdDocument,
  type GetNavigationByIdQuery,
} from "@/gql/sanity/codegen";
import config from "@/config/config";
import Header from "@/components/Header/Header";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: {
    template: `%s | ${config.COMPANY_NAME}`,
    default: config.COMPANY_NAME,
  },
  description: "Generated by create next app",
};

const GetNav = async (navId: string) => {
  try {
    const client = createApolloClient(fetch);
    const { data } = await client.query<GetNavigationByIdQuery>({
      query: GetNavigationByIdDocument,
      variables: {
        id: navId,
      },
    });
    return data;
  } catch (err) {
    console.log(err);
  }
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const primaryNav = await GetNav(config.PRIMARY_NAV_ID);
  const secondaryNav = await GetNav(config.SECONDARY_NAV_ID);

  return (
    <ViewTransitions>
      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <Header primaryNav={primaryNav} secondaryNav={secondaryNav} />
          {children}
        </body>
      </html>
    </ViewTransitions>
  );
}
